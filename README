(OLD SUMMARY) I repurposed the code from https://github.com/HBehrens/box2d.js and converted it into a neural network trainer via a genetic algorithm. The game is fashioned from the popular IO game bonk.io, and if all goes well it may be used to generate AIs for the game.

How to use:
Users are able to save any model by clicking "save tournament winner," "save red player," or "save blue player," and at the end of the tournament (or match in the case of saving red/blue) the user may fight the AI by clicking "toggle testing mode." If the user wishes to download their model they may use the "download model" button. AIs are able to be loaded from the "load model (testing only)" button, where the user may fight them in testing mode. The toggle debug option shows the raycasts which grab platform distances for one of the AIs (blue AI). Other things should be pretty self-explanatory for the most part.

TODO:
1. Allow user to grab AIs from their downloads (think of a standard file upload. Not hard to implement). Done!
2. Implement the NEAT algorithm for real this time (got scammed with a library claiming to implement NEAT).
   Harder than the first, but not that bad. Done!
3. Implement better population controls, noise controls, etc.
4. Add another screen that allows AIs to be loaded and then fight (may be used to compare AIs from multiple generations or training sessions).
